DATE: 2022-11-14
----------------

# Goal
{
[]See '13-blazor-text-editor-v5.0.0.txt' for more goals as they
    will not be repeated in this file.
[]Wire up all of the TextEditorHeader.razor Blazor component's buttons.
    [X]Undo
    [X]Redo
    [X]Cut
    [X]Copy
    [X]Paste
    [X]Save
    [X]Select All
    [X]Refresh
[]Check the file size of the NugetPackage when finished.
    []It should be as lightweight as it can be.
[]Move over all Analysis code (the ILexers and IDecorationMappers) to BlazorTextEditor
    []Not enough analysis logic exists to warrent installing a separate nuget
        package it is mostly just an annoying step at this point in time.
[]Move over some code from BlazorStudio to the BlazorTextEditor
    []CustomEvents
    []Dimensions
    []Dropdown
    []Menu
    []OutOfBoundsClick
    []Resize
    []Notifications
[]The getContextMenuFixedPositionRelativeToElement javascript needs to account
    for the scroll position horizontally and vertically.
[]TextEditorDisplay needs tabs by default
[]Ensure all unnecessary CSS is removed.
[]Ensure none of the css is non namespaces 'bte_...' is required
[]Ensure all CSS values are css variables
[]Consider doing what Microsoft.CodeAnalysis did with their nuget packages.
    []They have "Microsoft.CodeAnalysis" include all nuget packages in a single package.
        []The individual components are available as their own nuget packages as well.
[]Should the sizes be in em instead of rem?
[]Check every usage of Blazor EditorRequired on a Parameter if it is actually required.
    []The warnings otherwise are incredibly obnoxious.
[]Look into how the BlazorTextEditor functions on mobile.
    []If the text editor cannot possibly work on mobile what is the course of action?
        []pseudo: if (mobile) <textarea /> else <TextEditorDisplay />
[]Demo app
    []Project Structure
        []BlazorTextEditor.Demo.ServerSide
        []BlazorTextEditor.Demo.Wasm
        []BlazorTextEditor.Demo.ClassLib
        []BlazorTextEditor.Demo.RazorLib
        []BlazorTextEditor.Demo.Tests
    []WebAssembly authentication
        []Service container
            []AddOidcAuthentication()
                []Adds services required for the app to interact 
                    with the Identity Provider (IP)
                []OIDC
                    []oidc-client.js
                    []Acronymn
                        []Open
                        []I (of the ID)
                        []D (of the ID)
                        []Connect
                    []Extends the OAuth 2.0 authorization protocol
        []Tokens
            []Access tokens (defined in OAuth)
                []For API
            []ID tokens (defined in OpenID Connect)
                []For authentication
                []Must not be used to make 
                    requests to the resource server
            []OAuth Refresh Tokens
                []Get a new access token without the user's interaction
                []Must not allow the client to gain any access 
                    beyond the scope of the original grant
        []OAuth Scopes
            []limit an application's access to a user's account
            []OAuth spec allows the authorization server or user
                to modify the scopes granted to the application 
                compared to what is requested
                []Not many examples of services doing this in practice

}

# Plan
{
}

# Youtube thumbnail ideas
{
}

# Youtube title ideas
{
}

# Youtube video description
{
Email Me:
    -hunterfreemandev@gmail.com

Text Editor from scratch with Blazor and C# youtube playlist:
    -https://youtube.com/playlist?list=PLG4PTDe2qc0i0COivTxn_rjSN96Xq-_K1

GitHub repos
    -BlazorStudio: https://github.com/huntercfreeman/BlazorStudio
    -Blazor.Text.Editor: https://github.com/huntercfreeman/Blazor.Text.Editor
    -Blazor.Text.Editor-Template: https://github.com/huntercfreeman/Blazor.Text.Editor-Template
    -Blazor.Text.Editor.Analysis: https://github.com/huntercfreeman/Blazor.Text.Editor.Analysis
    -BlazorTreeView: https://github.com/huntercfreeman/BlazorTreeView

NuGet Packages
    -Blazor.Text.Editor: https://www.nuget.org/packages/Blazor.Text.Editor/
    -Blazor.Text.Editor.Lexer.HTML: https://www.nuget.org/packages/Blazor.Text.Editor.Lexer.HTML
    -Blazor.Text.Editor.Lexer.CSharp: https://www.nuget.org/packages/Blazor.Text.Editor.Lexer.CSharp
}

# Before this video specifically checklist
{
[]See in general checklist
}

# Checklist before recording a video in general
{
[]Font-size
    []Rider
        []Appearance
            []Font-Family: Segoe UI;
		    []Font-Size: 24px;
        []Editor
            []Font-Family: Consolas;
		    []Font-Size: 30px;
		    []Line Height: 1.1;
    []Operating system
        []Windows
            []Settings > Accessibility > Text size
                []Text size slider
                    []150%
    []Web Browser
    []BlazorStudio itself
    []Visual Studio Code
}

# Web Links
{
}