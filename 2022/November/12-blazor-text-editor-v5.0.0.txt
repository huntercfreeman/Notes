DATE: 2022-11-12
----------------

# Goal
{
[]Release Version 5.0.0 of Blazor.Text.Editor 
    NuGet Package.
    []Publish the Razor ILexer nuget package.
    []Update the README.md
    []Update the CHANGELOG.md
    []Update the gettingStarted.md
    []Upload a youtube video covering v5.0.0
        []Make note of the personal website
            with BlazorStudio embedded in it.
}

# Plan
{
[]Automatic LocalStorage integration (Optional)
    []Exposes ITextEditorService
        .SetTextEditorOptionsFromLocalStorageAsync()
        so one can decide when to read in the stored state.
    []Will store the following if enabled
        []int? FontSizeInPixels
        []Theme? Theme
        []bool? ShowWhitespace
        []bool? ShowNewlines
    []Usage in Program.cs
        []builder.Services
            .AddTextEditorRazorLibServices(options =>
            {
                options.UseLocalStorageForSettings = true;
            });
[]Helper Components
    []TreeViewFooter.razor
    []TextEditorInputFontSize.razor
    []TextEditorInputShowNewLines.razor
    []TextEditorInputShowWhitespace.razor
    []TextEditorInputTheme.razor
[]Text Manipulation
    []When text is selected typing a character will
        delete the selection before inserting the
        character.
    []{ Shift + LeftClick } will move the
        text selection ending position index
        to the clicked position.
        []If the user does not have a text
            selection anchor set, the text
            selection anchor is set to where the
            cursor is prior to the movement.
            Then the text selecting ending position
            is the clicked position and
            in between the two points gets selected.
    []DoubleClick will expand select at the
        double-clicked position. In otherwords
        double clicking a word will now select that
        word.
[]Cursor movement
    []If the cursor is not in the viewable area
        upon an OnMouseDown event, the
        TextEditorDisplay will no longer do a jarring
        scroll to a midpoint of where the cursor is
        and where the user clicked.
        []That is to say this bug is fixed and no
            scroll occurs when the user clicks.
[]Fix the JavaScript disposing of IntersectionObservers
[]Keymap
    []Ctrl + X -> cut
    []Ctrl + Z -> undo
    []Ctrl + Y -> redo
[]ILexer
    []Added separate Razor file lexer nuget package
[]Visual Indicator whether TextEditorDisplay has focus
[]Blazor Component Parameter changes
    []TextEditorDisplay can be given
        the TextEditorKey of a yet to be registered
        TextEditorBase.
        []This is quite substantial as before
            one had to ensure the TextEditorBase
            existed before trying to render it.
            Now this is being done internally.
[]Theme changes
    []The 'Unset' theme is now a Visual Studio Dark Clone
        this theme is at the :root {} level in css
        and no .css class needs to be applied to a parent
        element of the text editor to use it.
}

# Youtube thumbnail ideas
{
[]Could a thumnail of the changes listed be possible?
[]Leveling up meme (The "level 1 Gangster vs level 100 Boss" meme)
}

# Youtube title ideas
{
[]v5.0.0 Blazor Text Editor : Large update
}

# Youtube video description
{
Email Me:
    -hunterfreemandev@gmail.com

Text Editor from scratch with Blazor and C# youtube playlist:
    -https://youtube.com/playlist?list=PLG4PTDe2qc0i0COivTxn_rjSN96Xq-_K1

GitHub repos
    -BlazorStudio: https://github.com/huntercfreeman/BlazorStudio
    -Blazor.Text.Editor: https://github.com/huntercfreeman/Blazor.Text.Editor
    -Blazor.Text.Editor-Template: https://github.com/huntercfreeman/Blazor.Text.Editor-Template
    -Blazor.Text.Editor.Analysis: https://github.com/huntercfreeman/Blazor.Text.Editor.Analysis
    -BlazorTreeView: https://github.com/huntercfreeman/BlazorTreeView

NuGet Packages
    -Blazor.Text.Editor: https://www.nuget.org/packages/Blazor.Text.Editor/
    -Blazor.Text.Editor.Lexer.HTML: https://www.nuget.org/packages/Blazor.Text.Editor.Lexer.HTML
    -Blazor.Text.Editor.Lexer.CSharp: https://www.nuget.org/packages/Blazor.Text.Editor.Lexer.CSharp
}

# Before this video specifically checklist
{
[]See in general checklist
}

# Checklist before recording a video in general
{
[]Font-size
    []Rider
        []Appearance
            []Font-Family: Segoe UI;
		    []Font-Size: 24px;
        []Editor
            []Font-Family: Consolas;
		    []Font-Size: 30px;
		    []Line Height: 1.1;
    []Operating system
        []Windows
            []Settings > Accessibility > Text size
                []Text size slider
                    []150%
    []Web Browser
    []BlazorStudio itself
    []Visual Studio Code
}

# Web Links
{
    My Website: https://github.com/huntercfreeman/Blazor.Text.Editor.Demo
    The demo source code: https://github.com/huntercfreeman/Blazor.Text.Editor.Demo
    BlazorStudio source code: https://github.com/huntercfreeman/BlazorStudio
    Blazor.Text.Editor source code: https://github.com/huntercfreeman/Blazor.Text.Editor

    As well more repos are on my github.
}