DATE: 2022-12-06
----------------

# Goal
{

[]Razor needs better ILexer implementation as 
    []@code{...}
    []@code
      {

      }
    []Previous two @code examples must be syntaxed highlighted
        properly.
        []Currently only the
            []@code{...}
                []Is syntax highlighted properly
[]Added in Svelte ILexer to work on alongside Razor ILexer.
    Helps with InjectedLanguageDefinition.cs figuring out what
    is needed.

[]The TextEditorDisplay scrollbar should listen for mousemove
    events in the viewport instead of the current functionality.
    []The current functionality is to listen for mousemove events
        within the rendered scrollbar html element.
        []This feels very awkward to use currently so
            using mousemove on viewport and displacing the
            scrollbar based on a position diff between 
            current and previous events instead of taking
            mouse position at time of event will
            feel much more natural.
[]When out of view of the first line and deleting all the Text
    one finds themselves NOT having the first line scrolled
    into view. This is erroneous and needs fixed.

}

# Plan
{

[]Regarding .razor file parsing
    []An ILexer should be composable from other
        ILexer implementations
        []Then the ILexer which is a composition of others
            would only have parsing logic to determine
            which ILexer it is composed of gets control.
            []Once an inner ILexer gets control the idea
                is that the inner ILexer performs its
                operation and then returns back to the
                parent ILexer which has the main while() 
                loop.
                []This then gives the other inner ILexer
                    implementations a chance to take control.
    []Examples of ILexers made by composition of inner ILexers (two
        examples are used as to not have an overly narrow understanding
        of mixing HTML and an injected language):
        []RazorLexer.cs
            []Inner ILexer(s)
                []HtmlLexer.cs
                []CSharpLexer.cs
            []Conditions to give an inner ILexer control
                []
        []SvelteLexer.css
            []Inner ILexer(s)
                []User chooses between
                    []JavaScriptLexer.cs
                    []TypeScriptLexer.cs
                []HtmlLexer.cs
                []CssLexer.cs
            []Conditions to give an inner ILexer control
                []<script> tag
                    []<script lang="ts">
                        []TypeScriptLexer.cs
                    []<script>
                        []JavaScriptLexer.cs
                []Top level text is treated as HTML if not a
                    matching tag which specifies a specific ILexer
                    []HtmlLexer.cs
                        []The '{' and '}' characters deliminate swapping
                            to the corresponding ILexer which is chosen
                            in the user's <script> tag. The default
                            ILexer is JavaScriptLexer.
                []<style> tag
                    []CssLexer.cs
            
}

# Youtube thumbnail ideas
{

}

# Youtube title ideas
{

}

# Youtube video description
{

Previous Video which goes over this same topic but with pseudo code:
    -https://youtu.be/KEakxOFEMkk

Email Me:
    -hunterfreemandev@gmail.com

GitHub repos
    -BlazorStudio: https://github.com/huntercfreeman/BlazorStudio
    -Blazor.Text.Editor: https://github.com/huntercfreeman/Blazor.Text.Editor
    -Notes: https://github.com/huntercfreeman/Notes

Demo Website (Runs WebAssembly so clear your cache if you see an old version)
    -https://hunter-freeman-dev.azurewebsites.net/

NuGet Packages
    -Blazor.Text.Editor: https://www.nuget.org/packages/Blazor.Text.Editor/

Text Editor from scratch with Blazor and C# youtube playlist:
    -https://youtube.com/playlist?list=PLG4PTDe2qc0i0COivTxn_rjSN96Xq-_K1

}

# Checklist before recording a video in general
{

[]Font-size
    []Rider
        []Appearance
            []Font-Family: Segoe UI;
		    []Font-Size: 24px;
        []Editor
            []Font-Family: Consolas;
		    []Font-Size: 32px;
		    []Line Height: 1.1;
    []Operating system
        []Windows
            []Settings > Accessibility > Text size
                []Text size slider
                    []200%
    []Web Browser
        []110%
    []BlazorStudio itself
    []Visual Studio Code
        []14 font size

}