DATE: 2022-12-12
----------------

# Goal
{

[]Fix bug where one can scroll infinitely in a direction.
    []When the respective direction does not fill the viewable
        area this bug occurs for.
        []Horizontal
        []Vertical
    []At all times this occurs for
        []Horizontal
[]Fix tracking of the most characters on a single line

--------------------------------------------------------------

[]Re-architect the Text Editor
    []Store
        []FeatureState(s)
            []TextEditorModelsCollection
            []TextEditorViewsCollection
    []Types
        []TextEditorModel.cs
        []TextEditorView.cs
        []ContractionModel.cs
    []Hiearchy of Types
        []TextEditorModel.cs
        []TextEditorView.cs
            []ContractionModel.cs
    []Count for each Type
        []TextEditorModel.cs
            []One per file
        []TextEditorView.cs
            []Many as desired per file
        []ContractionModel.cs
            []One per TextEditorView.cs
    []Purpose for each Type
        []TextEditorModel.cs
            []Using the file system as an example, the TextEditorModel.cs is
                a copy of a unique file's text contents.
                []Therefore changes to TextEditorModel.cs have no changes
                    to the original file until a 'save request' is made.
                    []The 'save request' in this case would overwrite the
                        original file with whatever was in the TextEditorModel's
                        copy.
        []TextEditorView.cs
            []The state regarding a User's current cursor position,
                and what the user can visibly see on the UI given
                their scroll position and other factors.
        []ContractionModel.cs
            []Encapsulates all the C# Properties which relate to
                what the user can visibly see on the UI given
                their scroll position and other factors.
    []Properties for each Type
        []TextEditorModel.cs
            []
        []TextEditorView.cs
            []
        []ContractionModel.cs
            []

-for many window do many TextEditorGroup.cs

TextEditorCase works by
    []Start with TextEditorModel.cs of a unique file
        []Make a TextEditorView.cs of the TextEditorModel.cs
            []Add to a TextEditorGroup.cs the TextEditorView.cs
                []Render each member of the group as a tab
            []Track one of the members as being the active member
        []Render a TextEditorGroupDisplay.razor for the group
    []Render a TextEditorViewDisplay for the active members
    
            





[]User wants to 'E

}

# Plan
{

[]
        
}

# Youtube thumbnail ideas
{

}

# Youtube title ideas
{

}

# Youtube video description
{

Email Me:
    -hunterfreemandev@gmail.com

GitHub repos
    -BlazorStudio: https://github.com/huntercfreeman/BlazorStudio
    -Blazor.Text.Editor: https://github.com/huntercfreeman/Blazor.Text.Editor
    -Notes: https://github.com/huntercfreeman/Notes

Demo Website (Runs WebAssembly so clear your cache if you see an old version)
    -https://hunter-freeman-dev.azurewebsites.net/

NuGet Packages
    -Blazor.Text.Editor: https://www.nuget.org/packages/Blazor.Text.Editor/

Text Editor from scratch with Blazor and C# youtube playlist:
    -https://youtube.com/playlist?list=PLG4PTDe2qc0i0COivTxn_rjSN96Xq-_K1

}

# Checklist before recording a video in general
{

[]Font-size
    []Rider
        []Appearance
            []Font-Family: Segoe UI;
		    []Font-Size: 24px;
        []Editor
            []Font-Family: Consolas;
		    []Font-Size: 32px;
		    []Line Height: 1.1;
    []Operating system
        []Windows
            []Settings > Accessibility > Text size
                []Text size slider
                    []200%
    []Web Browser
        []110%
    []BlazorStudio itself
    []Visual Studio Code
        []14 font size

}