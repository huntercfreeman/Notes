DATE: 2022-12-29
----------------

# Goal
{

[]Implement as much of the Vim keymap today as possible
    []Mostly focus on:
        []The general architecture of how changing ones keymap
            works.
        []The main grammar of Vim (? what are the names of these I am unsure)
            []Commands
                []d -> delete
                []v -> select
            []Motions
                []w -> word
                []e -> end
                []
            []Expansion
                []i -> inner
                []
            []Multiplier
                []1 -> 1x
                []2 -> 2x
                []3 -> 3x
                []....N -> Nx
                []....(N + 1) -> (N + 1)x
                []What is the minimum multiplier?
                []What is the maximum multiplier?
            []Valid Combinations of Keymap Grammar
                []Motion
                    []w
                        []Go the remaining length of the current word
                []Multiplier + Motion
                    []3w
                        []for (int i = 0; i < 3; i++)
                            []Go the remaining length of the current word
                []Command + Expansion + Motion
                    []viw
                        []Select
                        []Expand
                        []Word
                            []So, select the text representing the 
                                word the cursor is currently within
        []The main Modes of Vim (? what are the names of these I am unsure)
            []Normal
                []Initial Mode
                []Uses Vim Grammar
            []Insert
                []Falls back to the default keymap unless
                    an override is defined.
                    []An example override would be the
                        keyboard input: { "Escape" } which will
                        change the user's active mode to "NormalMode"
            []Visual
                []Uses Vim Grammar
                []Selection is more fine grained and can be
                    part of a line.
            []Visual-Block
                []Uses Vim Grammar
                []Selection is based on all or nothing selection of a line.
            []Command



    

[]Look into horizontal scrolling
        



}

# Plan
{

}

# Youtube thumbnail ideas
{

}

# Youtube title ideas
{

}

# Youtube video description
{

Email Me:
    -hunterfreemandev@gmail.com

GitHub repos
    -BlazorStudio: https://github.com/huntercfreeman/BlazorStudio
    -Blazor.Text.Editor: https://github.com/huntercfreeman/Blazor.Text.Editor
    -Notes: https://github.com/huntercfreeman/Notes

Demo Website (Runs WebAssembly so clear your cache if you see an old version)
    -https://hunter-freeman-dev.azurewebsites.net/

NuGet Packages
    -Blazor.Text.Editor: https://www.nuget.org/packages/Blazor.Text.Editor/

Text Editor from scratch with Blazor and C# youtube playlist:
    -https://youtube.com/playlist?list=PLG4PTDe2qc0i0COivTxn_rjSN96Xq-_K1

}

# Checklist before recording a video in general
{

[]Font-size
    []Rider
        []Appearance
            []Font-Family: Segoe UI;
		    []Font-Size: 24px; was 18
        []Editor
            []Font-Family: Consolas;
		    []Font-Size: 32px; was 23
		    []Line Height: 1.1;
    []Operating system
        []Windows
            []Settings > Accessibility > Text size
                []Text size slider
                    []200% was using 125% before change
    []Web Browser
        []110%
    []BlazorStudio itself
    []Visual Studio Code
        []14 font size

}