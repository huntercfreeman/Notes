public partial class PanelsCollection
{
    private class Reducer
    {
        [ReducerMethod]
        public static PanelsCollection ReduceRegisterPanelModelAction(
            PanelsCollection previousPanelsCollection,
            ReduceRegisterPanelModelAction reduceRegisterPanelModelAction)
        {
            if (previousPanelsCollection.PanelModelsList.Any(
                    x => x.PanelModelKey == reduceRegisterPanelModelAction.PanelModel.PanelModelKey))
            {
                return previousPanelsCollection;
            }

            var nextPanelsList = previousPanelsCollection.PanelModelsList.Add(
                reduceRegisterPanelModelAction.PanelModel);

            return previousPanelsCollection with
            {
                PanelModelsList = nextPanelsList
            };
        }
        
        [ReducerMethod]
        public static PanelsCollection ReduceDisposePanelModelAction(
            PanelsCollection previousPanelsCollection,
            DisposePanelModelAction disposePanelModelAction)
        {
            var targetedPanelModel = previousPanelsCollection.PanelModelsList.FirstOrDefault(
                    x => x.PanelModelKey == disposePanelModelAction.PanelModel.PanelModelKey);

            if (targetedPanelModel is null)
                return previousPanelsCollection;

            var nextPanelsList = previousPanelsCollection.PanelModelsList.Remove(
                targetedPanelModel);

            return previousPanelsCollection with
            {
                PanelModelsList = nextPanelsList
            };
        }
        
        [ReducerMethod]
        public static PanelsCollection ReduceSetActivePanelTabAction(
            PanelsCollection previousPanelsCollection,
            SetActivePanelTabAction setActivePanelTabAction)
        {
            var targetedPanelModel = previousPanelsCollection.PanelModelsList.FirstOrDefault(
                    x => x.PanelModelKey == setActivePanelTabAction.PanelModelKey);

            if (targetedPanelModel is null)
                return previousPanelsCollection;

            nextPanelModel = targetedPanelModel with
            {
                ActivePanelTabKey = setActivePanelTabAction.PanelTabKey
            };

            var nextPanelsList = previousPanelsCollection.PanelModelsList.Replace(
                targetedPanelModel,
                nextPanelModel);

            return previousPanelsCollection with
            {
                PanelModelsList = nextPanelsList
            };
        }
    }
}